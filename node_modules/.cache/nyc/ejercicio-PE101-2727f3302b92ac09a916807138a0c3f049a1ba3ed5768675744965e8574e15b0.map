{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-21-22-prct09-filesystem-notes-app-Pablo400/src/ejercicio-PE101.ts","sources":["/home/usuario/ull-esit-inf-dsi-21-22-prct09-filesystem-notes-app-Pablo400/src/ejercicio-PE101.ts"],"names":[],"mappings":";AAAA,yCAAyC;AACzC,4BAA4B;AAC5B,kCAAkC;;;AAElC,MAAsB,eAAe;IAGnC;QACE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IACxB,CAAC;IAEM,GAAG;QACR,IAAI,CAAC,WAAW,CAAC;QAEjB,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAEM,aAAa;QAClB,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;YACjC,OAAO,oCAAoC,CAAC;SAC7C;QAED,OAAO,6BAA6B,CAAC;IACvC,CAAC;IAMS,mBAAmB,KAAI,CAAC;IACxB,eAAe,KAAI,CAAC;IACpB,uBAAuB,KAAI,CAAC;IAC5B,sBAAsB,KAAI,CAAC;CACtC;AAnCD,0CAmCC;AAGD,MAAa,YAAa,SAAQ,eAAe;IAC/C;QACE,KAAK,EAAE,CAAC;IACV,CAAC;IAES,WAAW;QACnB,MAAM,UAAU,GAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE7C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC;IAEM,GAAG;QACR,OAAO,CAAC,GAAG,EAAE,EAAE;YACb,IAAI,CAAC,WAAW,EAAE,CAAC;YAEnB,MAAM,WAAW,GAAa,EAAE,CAAC;YAEjC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAe,EAAE,EAAE;gBAC9C,WAAW,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;YAEH,OAAO,WAAW,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAEM,MAAM;QACX,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,GAAG,GAAW,CAAC,CAAC;QAEpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnD,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/B;QAED,OAAO,GAAG,CAAC;IACb,CAAC;CACF;AAnCD,oCAmCC;AAED,MAAa,YAAa,SAAQ,eAAe;IAC/C;QACE,KAAK,EAAE,CAAC;IACV,CAAC;IAES,WAAW;QACnB,MAAM,UAAU,GAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE7C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC;IAEM,GAAG;QACR,OAAO,CAAC,GAAG,EAAE,EAAE;YACb,MAAM,WAAW,GAAa,EAAE,CAAC;YAEjC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAe,EAAE,EAAE;gBAC9C,WAAW,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;YAEH,OAAO,WAAW,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAEM,MAAM;QACX,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,GAAG,GAAW,CAAC,CAAC;QAEpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnD,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/B;QAED,OAAO,GAAG,CAAC;IACb,CAAC;CACF;AAjCD,oCAiCC;AAED,MAAa,aAAc,SAAQ,eAAe;IAChD;QACE,KAAK,EAAE,CAAC;IACV,CAAC;IAES,WAAW;QACnB,MAAM,UAAU,GAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE7C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC;IAEM,GAAG;QACR,OAAO,CAAC,IAAI,EAAE,EAAE;YACd,IAAI,CAAC,WAAW,EAAE,CAAC;YAEnB,MAAM,WAAW,GAAa,EAAE,CAAC;YAEjC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAe,EAAE,EAAE;gBAC9C,WAAW,CAAC,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;YAEH,OAAO,WAAW,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAEM,MAAM;QACX,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,IAAI,IAAI,GAAW,CAAC,CAAC;QAErB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnD,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAChC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AApCD,sCAoCC;AAED,MAAa,YAAa,SAAQ,eAAe;IAC/C;QACE,KAAK,EAAE,CAAC;IACV,CAAC;IAES,WAAW;QACnB,MAAM,UAAU,GAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE7C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC;IAEM,GAAG;QACR,OAAO,CAAC,GAAG,EAAE,EAAE;YACb,IAAI,CAAC,WAAW,EAAE,CAAC;YAEnB,MAAM,WAAW,GAAa,EAAE,CAAC;YAEjC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAe,EAAE,EAAE;gBAC9C,WAAW,CAAC,IAAI,CAAC,OAAO,GAAC,GAAG,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC;YAEH,OAAO,WAAW,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAEM,MAAM;QACX,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,IAAI,GAAG,GAAW,CAAC,CAAC;QAEpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnD,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/B;QAED,OAAO,GAAG,CAAC;IACb,CAAC;CACF;AApCD,oCAoCC","sourcesContent":["/* eslint-disable no-array-constructor */\n/* eslint-disable max-len */\n/* eslint-disable require-jsdoc */\n\nexport abstract class BasicOperations {\n  protected numberArray: number[][];\n\n  constructor() {\n    this.numberArray = [];\n  }\n\n  public run() {\n    this.numberArray;\n\n    this.initNumbers();\n\n    this.afterInitialisation();\n\n    this.evaluateArray();\n\n    this.afterEvaluation();\n  }\n\n  public evaluateArray() {\n    if (this.numberArray.length === 0) {\n      return 'El array no contiene ningún número';\n    }\n\n    return 'El array contiene elementos';\n  }\n\n  protected abstract initNumbers(): void;\n  protected abstract reduce(array: number[]) : number;\n  protected abstract map(array: number[]): (n : number) => number[];\n\n  protected afterInitialisation() {}\n  protected afterEvaluation() {}\n  protected afterChildrenGeneration() {}\n  protected afterSurvivorSelection() {}\n}\n\n\nexport class AddMapReduce extends BasicOperations {\n  constructor() {\n    super();\n  }\n\n  protected initNumbers(): void {\n    const firstArray: number[] = [1, 2, 3, 4, 5];\n\n    this.numberArray.push(firstArray);\n  }\n\n  public map(): (n: number) => number[] {\n    return (sum) => {\n      this.initNumbers();\n\n      const resultArray: number[] = [];\n\n      this.numberArray[0].forEach((element: number) => {\n        resultArray.push(element + sum);\n      });\n\n      return resultArray;\n    };\n  }\n\n  public reduce(): number {\n    this.initNumbers();\n    let sum: number = 0;\n\n    for (let i = 0; i < this.numberArray[0].length; i++) {\n      sum += this.numberArray[0][i];\n    }\n\n    return sum;\n  }\n}\n\nexport class SubMapReduce extends BasicOperations {\n  constructor() {\n    super();\n  }\n\n  protected initNumbers(): void {\n    const firstArray: number[] = [1, 2, 3, 4, 5];\n\n    this.numberArray.push(firstArray);\n  }\n\n  public map(): (n: number) => number[] {\n    return (sub) => {\n      const resultArray: number[] = [];\n\n      this.numberArray[0].forEach((element: number) => {\n        resultArray.push(element - sub);\n      });\n\n      return resultArray;\n    };\n  }\n\n  public reduce(): number {\n    this.initNumbers();\n    let sub: number = 0;\n\n    for (let i = 0; i < this.numberArray[0].length; i++) {\n      sub -= this.numberArray[0][i];\n    }\n\n    return sub;\n  }\n}\n\nexport class ProdMapReduce extends BasicOperations {\n  constructor() {\n    super();\n  }\n\n  protected initNumbers(): void {\n    const firstArray: number[] = [1, 2, 3, 4, 5];\n\n    this.numberArray.push(firstArray);\n  }\n\n  public map(): (n: number) => number[] {\n    return (mult) => {\n      this.initNumbers();\n\n      const resultArray: number[] = [];\n\n      this.numberArray[0].forEach((element: number) => {\n        resultArray.push(element*mult);\n      });\n\n      return resultArray;\n    };\n  }\n\n  public reduce(): number {\n    this.initNumbers();\n\n    let mult: number = 1;\n\n    for (let i = 0; i < this.numberArray[0].length; i++) {\n      mult *= this.numberArray[0][i];\n    }\n\n    return mult;\n  }\n}\n\nexport class DivMapReduce extends BasicOperations {\n  constructor() {\n    super();\n  }\n\n  protected initNumbers(): void {\n    const firstArray: number[] = [1, 2, 3, 4, 5];\n\n    this.numberArray.push(firstArray);\n  }\n\n  public map(): (n: number) => number[] {\n    return (div) => {\n      this.initNumbers();\n\n      const resultArray: number[] = [];\n\n      this.numberArray[0].forEach((element: number) => {\n        resultArray.push(element/div);\n      });\n\n      return resultArray;\n    };\n  }\n\n  public reduce(): number {\n    this.initNumbers();\n\n    let div: number = 1;\n\n    for (let i = 0; i < this.numberArray[0].length; i++) {\n      div /= this.numberArray[0][i];\n    }\n\n    return div;\n  }\n}\n"]}